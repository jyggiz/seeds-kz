@use "sass:math";

html {
  font-family: var(--font-base);
  font-size: percentage(math.div(10, 16));
  box-sizing: border-box;
  background-color: var(--color-page-background);
  color: var(--color-page-color);

  .scroll-tracker-point {
    color: red !important;
    pointer-events: none;
    transition: all 150ms linear;
  }
}

html,
body {
  &.-isScrollDisabled {
    overflow: hidden;
  }
}

hr {
  border: solid var(--color-black-10);
  border-width: 1px 0 0;
  margin: 0;
}

*,
*::before,
*::after {
  [dir="rtl"] & {
    letter-spacing: initial !important;
  }

  .inert & {
    user-select: none;
  }

  html:not([lang="ko"]) & {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  box-sizing: border-box;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;
  margin: 0;
}

h1 {
  @include type("heading", "h1");
}

h2 {
  @include type("heading", "h2");
}

h3 {
  @include type("heading", "h3");
}

h4 {
  @include type("heading", "h4");
}

h5 {
  @include type("heading", "h5");
}

h6 {
  @include type("heading", "h6");
}

p {
  margin: 0;
}

ul,
ol {
  margin: 0;
  padding: 0;
}

img {
  display: block;
}

a,
.button {
  display: inline-block;
  font-family: inherit;
  color: inherit;
  text-decoration: none;
  background: none;
  border: 0;
  padding: 0;
  cursor: pointer;
}

// Custom Scrollbar
//[data-scrollbar="true"] {
//  .scrollbar-track-y {
//    background: none;
//  }
//
//  .scrollbar-thumb-y {
//    background: rgba(200, 200, 190, 0.5);
//  }
//}

/*
  This will hide the focus indicator if the element receives focus via the mouse,
  but it will still show up on keyboard focus.
*/
.js-focus-visible :focus:not(.focus-visible) {
  outline: none;
}

.js-focus-visible .focus-visible {
  border-radius: 2px;
  outline: 2px solid var(--color-light-blue);
}

.u-srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

[data-lazy-component]:not(.-isInitialised) {
  visibility: hidden !important;
  position: relative;
}

.inert {
  pointer-events: none;
  cursor: default;
  user-select: none;
}
